@using StackExchange.Profiling
@using TVProgViewer.Core.Configuration
@using TVProgViewer.Core.Domain.Common
@using TVProgViewer.Core.Domain.Seo
@using TVProgViewer.Services.Events
@using TVProgViewer.Services.Security
@using TVProgViewer.Web.Framework.Events
@using TVProgViewer.Core
@using TVProgViewer.Core.Events
@inject CommonSettings commonSettings
@inject IEventPublisher eventPublisher
@inject IPermissionService permissionService
@inject IWorkContext workContext
@inject SeoSettings seoSettings
@inject AppSettings appSettings
@inject TVProgViewer.Services.Localization.ILanguageService languageService
@{
    Html.AppendCssFileParts(ResourceLocation.Head, "~/css/styles.css");
    Html.AppendCssFileParts(ResourceLocation.Head, "~/lib/bootstrap/css/bootstrap.css");
    Html.AppendCssFileParts(ResourceLocation.Head, "~/lib/bootstrap/css/bootstrap-theme.css");
    Html.AppendCssFileParts(ResourceLocation.Head, "~/css/jsTree/themes/default/style.css");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.countryselect.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.ajaxcart.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.common.js");
    //when jQuery migrate script logging is active you will see the log in the browser console
    if (commonSettings.JqueryMigrateScriptLoggingActive)
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery-migrate/jquery-migrate-3.1.0.js");
    }
    else
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery-migrate/jquery-migrate-3.1.0.min.js");
    }
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery-validate/jquery.validate.unobtrusive-v3.2.11/jquery.validate.unobtrusive.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery-validate/jquery.validate-v1.19.1/jquery.validate.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery/jquery-3.4.1.min.js");
    
    //custom tag(s);
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        Html.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }

    var displayMiniProfiler = appSettings.CommonConfig.MiniProfilerEnabled && await permissionService.AuthorizeAsync(StandardPermissionProvider.AccessProfiling);

    //event
    await eventPublisher.PublishAsync(new PageRenderingEvent(this.Html));
}
<!DOCTYPE html>
<html lang="@languageService.GetTwoLetterIsoLanguageName(await workContext.GetWorkingLanguageAsync())" @(await this.ShouldUseRtlThemeAsync() ? Html.Raw(" dir=\"rtl\"") : null) @Html.TvProgPageCssClasses()>
<head>
    <title>@Html.TvProgTitle()</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="description" content="@(Html.TvProgMetaDescription())" />
    <meta name="keywords" content="@(Html.TvProgMetaKeywords())" />
    <meta name="generator" content="TVProgViewer" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="yandex-verification" content="44a70f2cf486e2a5" />
    <!-- Open Graph Snippets -->
    <meta property="og:type" content="website">
    <meta property="og:title" content="Программа передач по всем каналам сейчас, следом, поиск телепередач — TVProgViewer">
    <meta property="og:description" content="TVProgViewer — это портал для удобного просмотра и тонкой настройки программы телепередач с анонсами. 🖥 На портале есть возможность поиска передач в эфирной сетке по дням, каналам и жанрам. 🖥 Обзор программы на сейчас, затем в эфире, по дням и каналам. 🖥 Программа передач регулярно обновляется и всегда остаётся в актуальном состоянии на неделю.">
    <meta property="og:url" content="https://tvprogviewer.ru">
    <meta property="og:image" content="https://tvprogviewer.ru/images/i/TVProgViewer_original.png">
    <meta property="og:site_name" content="TVProgViewer">
    <meta property="og:locale" content="ru_RU">
    <!-- Yandex.Metrika counter -->
    <script type="text/javascript">
        (function (m, e, t, r, i, k, a) {
            m[i] = m[i] || function () { (m[i].a = m[i].a || []).push(arguments) };
            m[i].l = 1 * new Date(); k = e.createElement(t), a = e.getElementsByTagName(t)[0], k.async = 1, k.src = r, a.parentNode.insertBefore(k, a)
        })
            (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

        ym(54311379, "init", {
            clickmap: true,
            trackLinks: true,
            accurateTrackBounce: true,
            webvisor: true
        });
    </script>
    <noscript><div><img src="https://mc.yandex.ru/watch/54311379" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
    <!-- Yandex.Metrika counter -->
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-142558739-2"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-142558739-2');
    </script>
    @Html.TvProgHeadCustom()
    @*This is used so that themes can inject content into the header*@
    @await Html.PartialAsync("Head")
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeadHtmlTag })
    @Html.TvProgCssFiles(ResourceLocation.Head)
    @Html.TvProgScripts(ResourceLocation.Head)
    @Html.TvProgCanonicalUrls()
    @await Component.InvokeAsync("NewsRssHeaderLink")
    @await Component.InvokeAsync("BlogRssHeaderLink")
    @*Insert favicon and app icons head code*@
    @await Component.InvokeAsync("Favicon")
    @if (displayMiniProfiler)
    {
        <mini-profiler />
    }
    @Html.TvProgInlineScripts(ResourceLocation.Head)
</head>
<body>
    <div class="navbar navbar-inverse tvprog-navbar" role="navigation">
        @await Component.InvokeAsync("Logo")
        <div class="container">
            <div class="navbar-header">
                <div class="header-links-wrapper">
                    @await Component.InvokeAsync("HeaderLinks")
                </div>
            </div>
            <div class="navbar-collapse collapse">

            </div>
        </div>
    </div>
    @RenderBody()
    @Html.TvProgCssFiles(ResourceLocation.Footer)
    @Html.TvProgScripts(ResourceLocation.Footer)
    @Html.TvProgInlineScripts(ResourceLocation.Footer)
</body>
</html>