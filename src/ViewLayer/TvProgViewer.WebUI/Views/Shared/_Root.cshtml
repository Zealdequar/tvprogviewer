@{
    Layout = "_Root.Head";
}
@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.BodyStartHtmlTagAfter })
@{ await Html.RenderPartialAsync("_Notifications"); }
@{ await Html.RenderPartialAsync("_JavaScriptDisabledWarning"); }
@{ await Html.RenderPartialAsync("_OldInternetExplorerWarning"); }
<div class="master-wrapper-page">
    @await Component.InvokeAsync(typeof(AdminHeaderLinksViewComponent))
    @{ await Html.RenderPartialAsync("_Header"); }
    <script asp-location="Footer">
        var localized_data = {
            AjaxCartFailure: "@T("AjaxCart.Failure")"
        };
        AjaxCart.init(false, '.header-links .cart-qty', '.header-links .wishlist-qty', '#flyout-cart', localized_data);
    </script>
    
        <div class="master-wrapper-content">
        <!-- Yandex.RTB R-A-5258749-1 -->
        <div class="top-banner">
            <div id="yandex_rtb_R-A-5258749-1"></div>
            <script>
                window.yaContextCb.push(() => {
                    Ya.Context.AdvManager.render({
                        "blockId": "R-A-5258749-1",
                        "renderTo": "yandex_rtb_R-A-5258749-1"
                    })
                })
            </script>
        </div>
            <div class="header-upper">
                <div class="form-group row">
                    <div class="form-row">
                        <label for="userProvider" class="col-xs-2 col-form-label header-label">Провайдер ТВ-программы</label>
                        @await Component.InvokeAsync("TvProgProviderSelector")
                     </div>   
                     <div class="form-row">
                        <label for="userTypeProg" class="col-xs-2 col-form-label header-label">Тип ТВ-программы</label>
                        @await Component.InvokeAsync("TvTypeProgSelector")
                     </div>
                     <div class="form-row">
                        <label for="userCategory" class="col-xs-2 col-form-label header-label">Категория</label>
                        @await Component.InvokeAsync("TvCategorySelector")
                     </div>
                </div>
            </div>
        
            @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HeaderSelectors })
            @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContentBefore })

            @if (IsSectionDefined("Breadcrumb"))
            {
                @RenderSection("Breadcrumb")
            }
            <div class="master-column-wrapper">
                @RenderBody()
            </div>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContentAfter })
    </div>
    
    @await Component.InvokeAsync(typeof(FooterViewComponent))
</div>
@await Component.InvokeAsync(typeof(EuCookieLawViewComponent))
@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.BodyEndHtmlTagBefore })
