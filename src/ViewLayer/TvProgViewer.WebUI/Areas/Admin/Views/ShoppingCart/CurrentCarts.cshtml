@model ShoppingCartSearchModel

@using TvProgViewer.Services.Stores
@inject IStoreService storeService

@{
    var stores = await storeService.GetAllStoresAsync();

    //page title
    ViewBag.PageTitle = T("Admin.CurrentCarts.CartsAndWishlists").Text;
    //active menu item (system name)
    TvProgHtml.SetActiveMenuItemSystemName("Current shopping carts and wishlists");
}

@{
    const string hideSearchBlockAttributeName = "CurrentCartsPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentUserAsync(), hideSearchBlockAttributeName);
}

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.CurrentCarts.CartsAndWishlists")
    </h1>
    <div class="float-right">
        &nbsp;
        @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = AdminWidgetZones.CurrentShoppingCartListButtons, additionalData = Model })
    </div>
</div>

<section class="content">
    <div class="container-fluid">
    <div class="form-horizontal">
        <div class="cards-group">
            <div class="card card-default card-search">
                <div class="card-body">
                    <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                        <div class="search-text">@T("Admin.Common.Search")</div>
                        <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                        <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                    </div>

                    <div class="search-body @(hideSearchBlock ? "closed" : "")">

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group row">
                                    <div class="col-md-4">
                                        <tvprog-label asp-for="StartDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <tvprog-editor asp-for="StartDate" />
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-4">
                                        <tvprog-label asp-for="EndDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <tvprog-editor asp-for="EndDate" />
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-4">
                                        <tvprog-label asp-for="TvChannelId" />
                                    </div>
                                    <div class="col-md-8">
                                        <input type="text" id="search-tvchannel-name" autocomplete="off" class="form-control" />
                                        <span id="search-tvchannel-friendly-name"></span>
                                        <button type="button" id="search-tvchannel-clear" class="btn bg-gray" style="display: none; margin-top: 5px;">@T("Admin.Common.Clear")</button>
                                        <input asp-for="TvChannelId" autocomplete="off" style="display: none;" />
                                        <script>
                                        $(document).ready(function() {
                                            $('#search-tvchannel-name').autocomplete({
                                                delay: 500,
                                                minLength: 3,
                                                source: '@Url.Action("SearchAutoComplete", "SearchComplete")',
                                                select: function(event, ui) {
                                                    $('#@Html.IdFor(model => model.TvChannelId)').val(ui.item.tvchannelid);
                                                    $('#search-tvchannel-friendly-name').text(ui.item.label);

                                                    $('#search-tvchannel-clear').show();
                                                    return false;
                                                }
                                            });

                                            //remove button
                                            $('#search-tvchannel-clear').click(function() {
                                                $('#@Html.IdFor(model => model.TvChannelId)').val('0');
                                                $('#search-tvchannel-friendly-name').text('');
                                                $('#search-tvchannel-clear').hide();
                                                return false;
                                            });
                                        });
                                        </script>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group row">
                                    <div class="col-md-4">
                                        <tvprog-label asp-for="ShoppingCartType" />
                                    </div>
                                    <div class="col-md-8">
                                        <tvprog-select asp-for="ShoppingCartType" asp-items="@Model.AvailableShoppingCartTypes" />
                                    </div>
                                </div>
                                <div class="form-group row" @(Model.HideStoresList ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        <tvprog-label asp-for="StoreId" />
                                    </div>
                                    <div class="col-md-8">
                                        <tvprog-select asp-for="StoreId" asp-items="Model.AvailableStores" />
                                    </div>
                                </div>
                                <div class="form-group row" @(Model.AvailableCountries.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        <tvprog-label asp-for="BillingCountryId" />
                                    </div>
                                    <div class="col-md-8">
                                        <tvprog-select asp-for="BillingCountryId" asp-items="Model.AvailableCountries" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center col-12">
                                <button type="button" id="search-shopping-carts" class="btn btn-primary btn-search">
                                    <i class="fas fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card card-default">
                <div class="card-body">
                    <tvprog-doc-reference asp-string-resource="@T("Admin.Documentation.Reference.ShoppingCartsAndWishlists", Docs.ShoppingCartsAndWishlists + Utm.OnAdmin)" />

                    @await Html.PartialAsync("Table", new DataTablesModel
                    {
                        Name = "carts-grid",
                        UrlRead = new DataUrl("CurrentCarts", "ShoppingCart", null),
                        SearchButtonId = "search-shopping-carts",
                        PrimaryKeyColumn = nameof(ShoppingCartModel.UserId),
                        Length = Model.PageSize,
                        LengthMenu = Model.AvailablePageSizes,
                        Filters = new List<FilterParameter>
                        {
                            new FilterParameter(nameof(Model.ShoppingCartType)),
                            new FilterParameter(nameof(Model.StartDate), typeof(DateTime?)),
                            new FilterParameter(nameof(Model.EndDate), typeof(DateTime?)),
                            new FilterParameter(nameof(Model.StoreId)),
                            new FilterParameter(nameof(Model.BillingCountryId)),
                            new FilterParameter(nameof(Model.TvChannelId))
                        },
                        ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(null)
                            {
                                Render = new RenderChildCaret(),
                                Width = "5",
                                Searchable = false,
                                ClassName =  TvProgColumnClassDefaults.ChildControl
                            },
                            new ColumnProperty(nameof(ShoppingCartModel.UserEmail))
                            {
                                Title = T("Admin.CurrentCarts.User").Text,
                                Render = new RenderLink(new DataUrl("~/Admin/User/Edit/", nameof(ShoppingCartModel.UserId)))
                            },
                            new ColumnProperty(nameof(ShoppingCartModel.TotalItems))
                            {
                                Title = T("Admin.CurrentCarts.TotalItems").Text,
                                Width = "150"
                            }
                        },
                        ChildTable = new DataTablesModel
                        {
                            Name = "tvchannels-grid",
                            UrlRead = new DataUrl("GetCartDetails", "ShoppingCart", null),
                            UrlDelete = new DataUrl("DeleteItem", "ShoppingCart", null),
                            IsChildTable = true,
                            Length = Model.PageSize,
                            LengthMenu = Model.AvailablePageSizes,
                            Filters = new List<FilterParameter>
                            {
                                new FilterParameter(nameof(ShoppingCartItemSearchModel.UserId), nameof(ShoppingCartItemSearchModel.UserId), true),
                                new FilterParameter(nameof(ShoppingCartItemSearchModel.ShoppingCartType)),
                                new FilterParameter(nameof(ShoppingCartItemSearchModel.StartDate), typeof(DateTime?)),
                                new FilterParameter(nameof(ShoppingCartItemSearchModel.EndDate), typeof(DateTime?)),
                                new FilterParameter(nameof(ShoppingCartItemSearchModel.StoreId)),
                                new FilterParameter(nameof(ShoppingCartItemSearchModel.BillingCountryId)),
                                new FilterParameter(nameof(ShoppingCartItemSearchModel.TvChannelId))
                            },
                            ColumnCollection = new List<ColumnProperty>
                            {
                                new ColumnProperty(nameof(ShoppingCartItemModel.TvChannelName))
                                {
                                    Title = T("Admin.CurrentCarts.TvChannel").Text,
                                    Width = "400",
                                    Render = new RenderCustom("renderTvChannelName")
                                },
                                new ColumnProperty(nameof(ShoppingCartItemModel.Quantity))
                                {
                                    Title = T("Admin.CurrentCarts.Quantity").Text,
                                    Width = "150"
                                },
                                new ColumnProperty(nameof(ShoppingCartItemModel.UnitPrice))
                                {
                                    Title = T("Admin.CurrentCarts.UnitPrice").Text,
                                    Width = "150"
                                },
                                new ColumnProperty(nameof(ShoppingCartItemModel.Total))
                                {
                                    Title = T("Admin.CurrentCarts.Total").Text,
                                    Width = "150"
                                },
                                new ColumnProperty(nameof(ShoppingCartItemModel.Store))
                                {
                                    Title = T("Admin.CurrentCarts.Store").Text,
                                    Width = "150",
                                    Visible = (await storeService.GetAllStoresAsync()).Count > 1
                                },
                                new ColumnProperty(nameof(ShoppingCartItemModel.UpdatedOn))
                                {
                                    Title = T("Admin.CurrentCarts.UpdatedOn").Text,
                                    Width = "150",
                                    Render = new RenderDate()
                                },
                                new ColumnProperty(nameof(ShoppingCartItemModel.Id))
                                {
                                    Title = T("Admin.Common.Delete").Text,
                                    Width = "100",
                                    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                                    ClassName =  TvProgColumnClassDefaults.Button
                                }
                            }
                        }
                    })
                </div>
                <script>
                    function renderTvChannelName(data, type, row, meta) {
                        var link = '@Url.Content("~/Admin/TvChannel/Edit/")' + row.TvChannelId;
                        var div = "";
        
                        if (row.AttributeInfo && row.AttributeInfo.length > 0)
                            div = "<div>" + row.AttributeInfo + "</div>";

                        return '<a href="' + link + '">' + data + '</a>'+div;
                    }
                </script>
            </div>
        </div>
    </div>
</div>
</section>