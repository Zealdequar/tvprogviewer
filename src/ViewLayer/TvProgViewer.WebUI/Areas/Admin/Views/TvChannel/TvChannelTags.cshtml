@model TvChannelTagSearchModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.Catalog.TvChannelTags").Text;
    //active menu item (system name)
    TvProgHtml.SetActiveMenuItemSystemName("TvChannel tags");
}

@{
    const string hideSearchBlockAttributeName = "ManufacturersPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentUserAsync(), hideSearchBlockAttributeName);
}

<form asp-controller="TvChannel" asp-action="TvChannelTags" method="post" id="tvChannel-tags-form">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Admin.Catalog.TvChannelTags")
        </h1>
        <div class="float-right">
            &nbsp;
            @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = AdminWidgetZones.TvChannelTagListButtons, additionalData = Model })
            <button type="button" id="delete-selected" class="btn btn-danger">
                <i class="far fa-trash-alt"></i>
                @T("Admin.Common.Delete.Selected")
            </button>
            <tvprog-action-confirmation asp-button-id="delete-selected" />
        </div>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-default card-search">
                        <div class="card-body">
                            <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                            </div>
                            <div class="search-body @(hideSearchBlock ? "closed" : "")">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <tvprog-label asp-for="SearchTagName" />
                                            </div>
                                            <div class="col-md-8">
                                                <tvprog-editor asp-for="SearchTagName" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="text-center col-12">
                                        <button type="button" id="search-tvChannel-tags" class="btn btn-primary btn-search">
                                            <i class="fas fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="cards-group">
                    <div class="card card-default">
                        <div class="card-body">
                            <tvprog-doc-reference asp-string-resource="@T("Admin.Documentation.Reference.TvChannelTags", Docs.TvChannelTags + Utm.OnAdmin)" />

                            @await Html.PartialAsync("Table", new DataTablesModel
                            {
                                Name = "tvChannel-tags-grid",
                                UrlRead = new DataUrl("TvChannelTags", "TvChannel", null),
                                SearchButtonId = "search-tvChannel-tags",
                                Length = Model.PageSize,
                                LengthMenu = Model.AvailablePageSizes,
                                Filters = new List<FilterParameter>
                                {
                                    new FilterParameter(nameof(Model.SearchTagName))
                                },
                                ColumnCollection = new List<ColumnProperty>
                                {
                                    new ColumnProperty(nameof(TvChannelTagModel.Id))
                                    {
                                        IsMasterCheckBox = true,
                                        Render = new RenderCheckBox("checkbox_tvChanneltags"),
                                        ClassName =  TvProgColumnClassDefaults.CenterAll,
                                        Width = "50"
                                    },
                                    new ColumnProperty(nameof(TvChannelTagModel.Name))
                                    {
                                        Title = T("Admin.Catalog.TvChannelTags.Fields.Name").Text
                                    },
                                    new ColumnProperty(nameof(TvChannelTagModel.TvChannelCount))
                                    {
                                        Title = T("Admin.Catalog.TvChannelTags.Fields.TvChannelCount").Text,
                                        Width = "150",
                                        ClassName =  TvProgColumnClassDefaults.CenterAll
                                    },
                                    new ColumnProperty(nameof(TvChannelTagModel.Id))
                                    {
                                        Title = T("Admin.Common.Edit").Text,
                                        Width = "100",
                                        ClassName =  TvProgColumnClassDefaults.Button,
                                        Render = new RenderButtonEdit(new DataUrl("EditTvChannelTag"))
                                    }
                                }
                            })

                            <script>
                        $(document).ready(function() {
                            $('#delete-selected-action-confirmation-submit-button').bind('click', function () {
                                var postData = {
                                    selectedIds: selectedIds
                                };
                                addAntiForgeryToken(postData);
                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("TvChannelTagsDelete", "TvChannel"))",
                                    data: postData,
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        showAlert('deleteSelectedFailed', errorThrown);
                                    },
                                    complete: function (jqXHR, textStatus) {
                                        if (jqXHR.status === 204)
                                        {
                                            showAlert('nothingSelectedAlert', '@T("Admin.Common.Alert.NothingSelected")');
                                            return;
                                        }
                                        updateTable('#tvChannel-tags-grid');
                                    }
                                });
                                $('#delete-selected-action-confirmation').modal('toggle');
                                return false;
                            });
                        });
                            </script>
                            <tvprog-alert asp-alert-id="deleteSelectedFailed" />
                            <tvprog-alert asp-alert-id="nothingSelectedAlert" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>